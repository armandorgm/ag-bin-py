2024-05-20 11:47:34,027 - order_monitor - INFO - <class 'models.BotSymbolStartData'>
2024-05-20 11:48:40,764 - order_monitor - INFO - <class 'models.BotSymbolStartData'>
2024-05-20 11:49:38,839 - order_monitor - INFO - <class 'models.BotSymbolStartData'>
2024-05-20 11:50:26,184 - order_monitor - INFO - <class 'models.BotSymbolStartData'>
2024-05-24 08:21:32,836 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-31' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-24 08:21:32,858 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-65' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-24 08:36:28,174 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-26' coro=<OrderMonitor.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\order_monitor.py:84> exception=NetworkError(ClientConnectionError('Connector is closed.'))>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\order_monitor.py", line 89, in start
    currentPrice = (await self.exchange.watch_ticker(botOperation.symbol))['last']
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\pro\binance.py", line 1011, in watch_ticker
    tickers = await self.watch_tickers([symbol], self.extend(params, {'callerMethodName': 'watchTicker'}))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\pro\binance.py", line 1025, in watch_tickers
    newTickers = await self.watch_multi_ticker_helper('watchTickers', channelName, symbols, params)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\pro\binance.py", line 1095, in watch_multi_ticker_helper
    result = await self.watch_multiple(url, messageHashes, self.deep_extend(request, params), subscriptionArgs, subscribe)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ccxt.base.errors.NetworkError: Connector is closed.
2024-05-24 11:28:33,401 - asyncio - ERROR - Unclosed connection
client_connection: Connection<ConnectionKey(host='fstream.binance.com', port=443, is_ssl=True, ssl=True, proxy=None, proxy_auth=None, proxy_headers_hash=None)>
2024-05-24 11:28:33,403 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-140' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-24 11:45:37,641 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-182' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-24 11:45:37,644 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-70' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-24 11:45:37,646 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-161' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-24 13:51:44,676 - asyncio - ERROR - Unclosed connection
client_connection: Connection<ConnectionKey(host='fstream.binance.com', port=443, is_ssl=True, ssl=True, proxy=None, proxy_auth=None, proxy_headers_hash=None)>
2024-05-24 20:34:17,878 - asyncio - ERROR - Unclosed connection
client_connection: Connection<ConnectionKey(host='fstream.binance.com', port=443, is_ssl=True, ssl=True, proxy=None, proxy_auth=None, proxy_headers_hash=None)>
2024-05-24 20:34:17,939 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-59' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-24 20:34:17,994 - asyncio - ERROR - Unclosed connection
client_connection: Connection<ConnectionKey(host='fstream.binance.com', port=443, is_ssl=True, ssl=True, proxy=None, proxy_auth=None, proxy_headers_hash=None)>
2024-05-25 02:31:31,575 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-75' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-25 02:31:31,594 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-136' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-25 02:31:31,596 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-197' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-25 02:31:31,597 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-208' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-25 05:26:53,997 - asyncio - ERROR - Unclosed connection
client_connection: Connection<ConnectionKey(host='fstream.binance.com', port=443, is_ssl=True, ssl=True, proxy=None, proxy_auth=None, proxy_headers_hash=None)>
2024-05-25 05:26:53,997 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-178' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-25 05:26:54,001 - asyncio - ERROR - Unclosed connection
client_connection: Connection<ConnectionKey(host='fstream.binance.com', port=443, is_ssl=True, ssl=True, proxy=None, proxy_auth=None, proxy_headers_hash=None)>
2024-05-25 05:26:54,001 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-193' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-25 08:34:39,733 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-210' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-25 08:34:39,736 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-115' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-25 09:45:01,623 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-51' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-25 09:49:24,975 - asyncio - ERROR - Task was destroyed but it is pending!
task: <Task cancelling name='Task-1' coro=<main() done, defined at c:\Users\arman\myProjects\ag-bin-py\main.py:7> wait_for=<Future pending cb=[Task.task_wakeup()]> cb=[gather.<locals>._done_callback() at C:\Python312\Lib\asyncio\tasks.py:767]>
2024-05-25 09:49:24,976 - asyncio - ERROR - Task was destroyed but it is pending!
task: <Task pending name='Task-71' coro=<AiohttpClient.ping_loop() running at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:124> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2024-05-25 10:22:27,848 - asyncio - ERROR - Task was destroyed but it is pending!
task: <Task cancelling name='Task-1' coro=<main() done, defined at c:\Users\arman\myProjects\ag-bin-py\main.py:7> wait_for=<Future pending cb=[Task.task_wakeup()]> cb=[gather.<locals>._done_callback() at C:\Python312\Lib\asyncio\tasks.py:767]>
2024-05-25 10:22:27,850 - ccxt.base.exchange - WARNING - binanceusdm requires to release all resources with an explicit call to the .close() coroutine. If you are using the exchange instance with async coroutines, add `await exchange.close()` to your code into a place when you're done with the exchange and don't need the exchange instance anymore (at the end of your async coroutine).
2024-05-25 10:22:27,850 - asyncio - ERROR - Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x00000214E83F54F0>
2024-05-25 10:22:27,851 - asyncio - ERROR - Task was destroyed but it is pending!
task: <Task pending name='Task-78' coro=<AiohttpClient.ping_loop() running at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:124> wait_for=<Future pending cb=[Task.task_wakeup()]>>
2024-05-25 10:22:36,019 - root - INFO - {'publicAPI': True, 'privateAPI': True, 'CORS': None, 'spot': True, 'margin': True, 'swap': True, 'future': True, 'option': True, 'addMargin': True, 'cancelAllOrders': True, 'cancelOrder': True, 'cancelOrders': True, 'createDepositAddress': False, 'createLimitOrder': True, 'createMarketOrder': True, 'createOrder': True, 'createPostOnlyOrder': True, 'createReduceOnlyOrder': True, 'createStopOrder': True, 'createStopLimitOrder': True, 'createStopMarketOrder': False, 'editOrder': True, 'fetchAccounts': None, 'fetchBalance': True, 'fetchBidsAsks': True, 'fetchBorrowInterest': True, 'fetchBorrowRate': None, 'fetchBorrowRateHistory': True, 'fetchBorrowRatesPerSymbol': None, 'fetchBorrowRates': None, 'fetchCanceledOrders': 'emulated', 'fetchClosedOrder': False, 'fetchClosedOrders': 'emulated', 'fetchCurrencies': True, 'fetchDeposit': False, 'fetchDepositAddress': True, 'fetchDepositAddresses': False, 'fetchDepositAddressesByNetwork': False, 'fetchDeposits': True, 'fetchFundingHistory': True, 'fetchFundingRate': True, 'fetchFundingRateHistory': True, 'fetchFundingRates': True, 'fetchIndexOHLCV': True, 'fetchLastPrices': True, 'fetchL2OrderBook': True, 'fetchLedger': True, 'fetchLedgerEntry': True, 'fetchLeverageTiers': True, 'fetchMarketLeverageTiers': 'emulated', 'fetchMarkets': True, 'fetchMarkOHLCV': True, 'fetchMyTrades': True, 'fetchOHLCV': True, 'fetchOpenOrder': True, 'fetchOpenOrders': True, 'fetchOrder': True, 'fetchOrderBook': True, 'fetchOrderBooks': False, 'fetchOrders': True, 'fetchOrderTrades': True, 'fetchPermissions': None, 'fetchPosition': True, 'fetchPositions': True, 'fetchPositionsRisk': True, 'fetchPremiumIndexOHLCV': False, 'fetchStatus': True, 'fetchTicker': True, 'fetchTickers': True, 'fetchTime': True, 'fetchTrades': True, 'fetchTradingFee': True, 'fetchTradingFees': True, 'fetchTradingLimits': 'emulated', 'fetchTransactions': False, 'fetchTransfers': True, 'fetchWithdrawal': False, 'fetchWithdrawals': True, 'reduceMargin': True, 'setLeverage': True, 'setMargin': False, 'setMarginMode': True, 'setPositionMode': True, 'signIn': False, 'transfer': True, 'withdraw': True, 'watchOrderBook': True, 'watchOrders': True, 'watchMyTrades': True, 'watchTickers': True, 'watchTicker': True, 'watchTrades': True, 'watchTradesForSymbols': True, 'watchOrderBookForSymbols': True, 'watchOHLCVForSymbols': False, 'watchBalance': True, 'watchOHLCV': True, 'borrowCrossMargin': True, 'borrowIsolatedMargin': True, 'closeAllPositions': False, 'closePosition': False, 'createConvertTrade': True, 'createLimitBuyOrder': True, 'createLimitSellOrder': True, 'createMarketBuyOrder': True, 'createMarketBuyOrderWithCost': True, 'createMarketOrderWithCost': True, 'createMarketSellOrder': True, 'createMarketSellOrderWithCost': True, 'createOrders': True, 'createOrderWithTakeProfitAndStopLoss': True, 'createStopLossOrder': True, 'createTakeProfitOrder': True, 'createTrailingPercentOrder': True, 'createTriggerOrder': True, 'fetchBorrowRateHistories': False, 'fetchCanceledAndClosedOrders': 'emulated', 'fetchConvertCurrencies': True, 'fetchConvertQuote': True, 'fetchConvertTrade': True, 'fetchConvertTradeHistory': True, 'fetchCrossBorrowRate': True, 'fetchCrossBorrowRates': False, 'fetchDepositsWithdrawals': False, 'fetchDepositWithdrawFee': 'emulated', 'fetchDepositWithdrawFees': True, 'fetchGreeks': True, 'fetchIsolatedBorrowRate': 'emulated', 'fetchIsolatedBorrowRates': True, 'fetchL3OrderBook': False, 'fetchLeverage': 'emulated', 'fetchLeverages': True, 'fetchLiquidations': False, 'fetchMarginAdjustmentHistory': True, 'fetchMarginMode': 'emulated', 'fetchMarginModes': True, 'fetchMyLiquidations': True, 'fetchMySettlementHistory': True, 'fetchOpenInterest': True, 'fetchOpenInterestHistory': True, 'fetchOption': True, 'fetchOptionChain': False, 'fetchPositionHistory': False, 'fetchPositionMode': True, 'fetchPositionsHistory': False, 'fetchSettlementHistory': True, 'fetchTransactionFee': 'emulated', 'fetchTransactionFees': True, 'fetchTransfer': False, 'fetchUnderlyingAssets': False, 'fetchVolatilityHistory': False, 'fetchWithdrawAddresses': False, 'fetchWithdrawalWhitelist': False, 'repayCrossMargin': True, 'repayIsolatedMargin': True, 'sandbox': True, 'ws': True, 'watchBidsAsks': True, 'watchOrdersForSymbols': True, 'watchPositions': True, 'createOrderWs': True, 'editOrderWs': True, 'cancelOrderWs': True, 'cancelOrdersWs': False, 'cancelAllOrdersWs': True, 'fetchBalanceWs': True, 'fetchDepositsWs': False, 'fetchMarketsWs': False, 'fetchMyTradesWs': True, 'fetchOHLCVWs': True, 'fetchOrderBookWs': True, 'fetchOpenOrdersWs': True, 'fetchOrderWs': True, 'fetchOrdersWs': True, 'fetchPositionWs': True, 'fetchPositionForSymbolWs': True, 'fetchPositionsWs': True, 'fetchTickerWs': True, 'fetchTradesWs': True, 'fetchTradingFeesWs': False, 'fetchWithdrawalsWs': False}
2024-05-25 10:59:22,107 - root - INFO - {"publicAPI": true, "privateAPI": true, "CORS": null, "spot": true, "margin": true, "swap": true, "future": true, "option": true, "addMargin": true, "cancelAllOrders": true, "cancelOrder": true, "cancelOrders": true, "createDepositAddress": false, "createLimitOrder": true, "createMarketOrder": true, "createOrder": true, "createPostOnlyOrder": true, "createReduceOnlyOrder": true, "createStopOrder": true, "createStopLimitOrder": true, "createStopMarketOrder": false, "editOrder": true, "fetchAccounts": null, "fetchBalance": true, "fetchBidsAsks": true, "fetchBorrowInterest": true, "fetchBorrowRate": null, "fetchBorrowRateHistory": true, "fetchBorrowRatesPerSymbol": null, "fetchBorrowRates": null, "fetchCanceledOrders": "emulated", "fetchClosedOrder": false, "fetchClosedOrders": "emulated", "fetchCurrencies": true, "fetchDeposit": false, "fetchDepositAddress": true, "fetchDepositAddresses": false, "fetchDepositAddressesByNetwork": false, "fetchDeposits": true, "fetchFundingHistory": true, "fetchFundingRate": true, "fetchFundingRateHistory": true, "fetchFundingRates": true, "fetchIndexOHLCV": true, "fetchLastPrices": true, "fetchL2OrderBook": true, "fetchLedger": true, "fetchLedgerEntry": true, "fetchLeverageTiers": true, "fetchMarketLeverageTiers": "emulated", "fetchMarkets": true, "fetchMarkOHLCV": true, "fetchMyTrades": true, "fetchOHLCV": true, "fetchOpenOrder": true, "fetchOpenOrders": true, "fetchOrder": true, "fetchOrderBook": true, "fetchOrderBooks": false, "fetchOrders": true, "fetchOrderTrades": true, "fetchPermissions": null, "fetchPosition": true, "fetchPositions": true, "fetchPositionsRisk": true, "fetchPremiumIndexOHLCV": false, "fetchStatus": true, "fetchTicker": true, "fetchTickers": true, "fetchTime": true, "fetchTrades": true, "fetchTradingFee": true, "fetchTradingFees": true, "fetchTradingLimits": "emulated", "fetchTransactions": false, "fetchTransfers": true, "fetchWithdrawal": false, "fetchWithdrawals": true, "reduceMargin": true, "setLeverage": true, "setMargin": false, "setMarginMode": true, "setPositionMode": true, "signIn": false, "transfer": true, "withdraw": true, "watchOrderBook": true, "watchOrders": true, "watchMyTrades": true, "watchTickers": true, "watchTicker": true, "watchTrades": true, "watchTradesForSymbols": true, "watchOrderBookForSymbols": true, "watchOHLCVForSymbols": false, "watchBalance": true, "watchOHLCV": true, "borrowCrossMargin": true, "borrowIsolatedMargin": true, "closeAllPositions": false, "closePosition": false, "createConvertTrade": true, "createLimitBuyOrder": true, "createLimitSellOrder": true, "createMarketBuyOrder": true, "createMarketBuyOrderWithCost": true, "createMarketOrderWithCost": true, "createMarketSellOrder": true, "createMarketSellOrderWithCost": true, "createOrders": true, "createOrderWithTakeProfitAndStopLoss": true, "createStopLossOrder": true, "createTakeProfitOrder": true, "createTrailingPercentOrder": true, "createTriggerOrder": true, "fetchBorrowRateHistories": false, "fetchCanceledAndClosedOrders": "emulated", "fetchConvertCurrencies": true, "fetchConvertQuote": true, "fetchConvertTrade": true, "fetchConvertTradeHistory": true, "fetchCrossBorrowRate": true, "fetchCrossBorrowRates": false, "fetchDepositsWithdrawals": false, "fetchDepositWithdrawFee": "emulated", "fetchDepositWithdrawFees": true, "fetchGreeks": true, "fetchIsolatedBorrowRate": "emulated", "fetchIsolatedBorrowRates": true, "fetchL3OrderBook": false, "fetchLeverage": "emulated", "fetchLeverages": true, "fetchLiquidations": false, "fetchMarginAdjustmentHistory": true, "fetchMarginMode": "emulated", "fetchMarginModes": true, "fetchMyLiquidations": true, "fetchMySettlementHistory": true, "fetchOpenInterest": true, "fetchOpenInterestHistory": true, "fetchOption": true, "fetchOptionChain": false, "fetchPositionHistory": false, "fetchPositionMode": true, "fetchPositionsHistory": false, "fetchSettlementHistory": true, "fetchTransactionFee": "emulated", "fetchTransactionFees": true, "fetchTransfer": false, "fetchUnderlyingAssets": false, "fetchVolatilityHistory": false, "fetchWithdrawAddresses": false, "fetchWithdrawalWhitelist": false, "repayCrossMargin": true, "repayIsolatedMargin": true, "sandbox": true, "ws": true, "watchBidsAsks": true, "watchOrdersForSymbols": true, "watchPositions": true, "createOrderWs": true, "editOrderWs": true, "cancelOrderWs": true, "cancelOrdersWs": false, "cancelAllOrdersWs": true, "fetchBalanceWs": true, "fetchDepositsWs": false, "fetchMarketsWs": false, "fetchMyTradesWs": true, "fetchOHLCVWs": true, "fetchOrderBookWs": true, "fetchOpenOrdersWs": true, "fetchOrderWs": true, "fetchOrdersWs": true, "fetchPositionWs": true, "fetchPositionForSymbolWs": true, "fetchPositionsWs": true, "fetchTickerWs": true, "fetchTradesWs": true, "fetchTradingFeesWs": false, "fetchWithdrawalsWs": false}
2024-05-25 10:59:33,048 - root - INFO - {"publicAPI": true, "privateAPI": true, "CORS": null, "spot": true, "margin": true, "swap": true, "future": true, "option": true, "addMargin": true, "cancelAllOrders": true, "cancelOrder": true, "cancelOrders": true, "createDepositAddress": false, "createLimitOrder": true, "createMarketOrder": true, "createOrder": true, "createPostOnlyOrder": true, "createReduceOnlyOrder": true, "createStopOrder": true, "createStopLimitOrder": true, "createStopMarketOrder": false, "editOrder": true, "fetchAccounts": null, "fetchBalance": true, "fetchBidsAsks": true, "fetchBorrowInterest": true, "fetchBorrowRate": null, "fetchBorrowRateHistory": true, "fetchBorrowRatesPerSymbol": null, "fetchBorrowRates": null, "fetchCanceledOrders": "emulated", "fetchClosedOrder": false, "fetchClosedOrders": "emulated", "fetchCurrencies": true, "fetchDeposit": false, "fetchDepositAddress": true, "fetchDepositAddresses": false, "fetchDepositAddressesByNetwork": false, "fetchDeposits": true, "fetchFundingHistory": true, "fetchFundingRate": true, "fetchFundingRateHistory": true, "fetchFundingRates": true, "fetchIndexOHLCV": true, "fetchLastPrices": true, "fetchL2OrderBook": true, "fetchLedger": true, "fetchLedgerEntry": true, "fetchLeverageTiers": true, "fetchMarketLeverageTiers": "emulated", "fetchMarkets": true, "fetchMarkOHLCV": true, "fetchMyTrades": true, "fetchOHLCV": true, "fetchOpenOrder": true, "fetchOpenOrders": true, "fetchOrder": true, "fetchOrderBook": true, "fetchOrderBooks": false, "fetchOrders": true, "fetchOrderTrades": true, "fetchPermissions": null, "fetchPosition": true, "fetchPositions": true, "fetchPositionsRisk": true, "fetchPremiumIndexOHLCV": false, "fetchStatus": true, "fetchTicker": true, "fetchTickers": true, "fetchTime": true, "fetchTrades": true, "fetchTradingFee": true, "fetchTradingFees": true, "fetchTradingLimits": "emulated", "fetchTransactions": false, "fetchTransfers": true, "fetchWithdrawal": false, "fetchWithdrawals": true, "reduceMargin": true, "setLeverage": true, "setMargin": false, "setMarginMode": true, "setPositionMode": true, "signIn": false, "transfer": true, "withdraw": true, "watchOrderBook": true, "watchOrders": true, "watchMyTrades": true, "watchTickers": true, "watchTicker": true, "watchTrades": true, "watchTradesForSymbols": true, "watchOrderBookForSymbols": true, "watchOHLCVForSymbols": false, "watchBalance": true, "watchOHLCV": true, "borrowCrossMargin": true, "borrowIsolatedMargin": true, "closeAllPositions": false, "closePosition": false, "createConvertTrade": true, "createLimitBuyOrder": true, "createLimitSellOrder": true, "createMarketBuyOrder": true, "createMarketBuyOrderWithCost": true, "createMarketOrderWithCost": true, "createMarketSellOrder": true, "createMarketSellOrderWithCost": true, "createOrders": true, "createOrderWithTakeProfitAndStopLoss": true, "createStopLossOrder": true, "createTakeProfitOrder": true, "createTrailingPercentOrder": true, "createTriggerOrder": true, "fetchBorrowRateHistories": false, "fetchCanceledAndClosedOrders": "emulated", "fetchConvertCurrencies": true, "fetchConvertQuote": true, "fetchConvertTrade": true, "fetchConvertTradeHistory": true, "fetchCrossBorrowRate": true, "fetchCrossBorrowRates": false, "fetchDepositsWithdrawals": false, "fetchDepositWithdrawFee": "emulated", "fetchDepositWithdrawFees": true, "fetchGreeks": true, "fetchIsolatedBorrowRate": "emulated", "fetchIsolatedBorrowRates": true, "fetchL3OrderBook": false, "fetchLeverage": "emulated", "fetchLeverages": true, "fetchLiquidations": false, "fetchMarginAdjustmentHistory": true, "fetchMarginMode": "emulated", "fetchMarginModes": true, "fetchMyLiquidations": true, "fetchMySettlementHistory": true, "fetchOpenInterest": true, "fetchOpenInterestHistory": true, "fetchOption": true, "fetchOptionChain": false, "fetchPositionHistory": false, "fetchPositionMode": true, "fetchPositionsHistory": false, "fetchSettlementHistory": true, "fetchTransactionFee": "emulated", "fetchTransactionFees": true, "fetchTransfer": false, "fetchUnderlyingAssets": false, "fetchVolatilityHistory": false, "fetchWithdrawAddresses": false, "fetchWithdrawalWhitelist": false, "repayCrossMargin": true, "repayIsolatedMargin": true, "sandbox": true, "ws": true, "watchBidsAsks": true, "watchOrdersForSymbols": true, "watchPositions": true, "createOrderWs": true, "editOrderWs": true, "cancelOrderWs": true, "cancelOrdersWs": false, "cancelAllOrdersWs": true, "fetchBalanceWs": true, "fetchDepositsWs": false, "fetchMarketsWs": false, "fetchMyTradesWs": true, "fetchOHLCVWs": true, "fetchOrderBookWs": true, "fetchOpenOrdersWs": true, "fetchOrderWs": true, "fetchOrdersWs": true, "fetchPositionWs": true, "fetchPositionForSymbolWs": true, "fetchPositionsWs": true, "fetchTickerWs": true, "fetchTradesWs": true, "fetchTradingFeesWs": false, "fetchWithdrawalsWs": false}
2024-05-25 15:51:06,618 - root - INFO - {
    "CORS": null,
    "addMargin": true,
    "borrowCrossMargin": true,
    "borrowIsolatedMargin": true,
    "cancelAllOrders": true,
    "cancelAllOrdersWs": true,
    "cancelOrder": true,
    "cancelOrderWs": true,
    "cancelOrders": true,
    "cancelOrdersWs": false,
    "closeAllPositions": false,
    "closePosition": false,
    "createConvertTrade": true,
    "createDepositAddress": false,
    "createLimitBuyOrder": true,
    "createLimitOrder": true,
    "createLimitSellOrder": true,
    "createMarketBuyOrder": true,
    "createMarketBuyOrderWithCost": true,
    "createMarketOrder": true,
    "createMarketOrderWithCost": true,
    "createMarketSellOrder": true,
    "createMarketSellOrderWithCost": true,
    "createOrder": true,
    "createOrderWithTakeProfitAndStopLoss": true,
    "createOrderWs": true,
    "createOrders": true,
    "createPostOnlyOrder": true,
    "createReduceOnlyOrder": true,
    "createStopLimitOrder": true,
    "createStopLossOrder": true,
    "createStopMarketOrder": false,
    "createStopOrder": true,
    "createTakeProfitOrder": true,
    "createTrailingPercentOrder": true,
    "createTriggerOrder": true,
    "editOrder": true,
    "editOrderWs": true,
    "fetchAccounts": null,
    "fetchBalance": true,
    "fetchBalanceWs": true,
    "fetchBidsAsks": true,
    "fetchBorrowInterest": true,
    "fetchBorrowRate": null,
    "fetchBorrowRateHistories": false,
    "fetchBorrowRateHistory": true,
    "fetchBorrowRates": null,
    "fetchBorrowRatesPerSymbol": null,
    "fetchCanceledAndClosedOrders": "emulated",
    "fetchCanceledOrders": "emulated",
    "fetchClosedOrder": false,
    "fetchClosedOrders": "emulated",
    "fetchConvertCurrencies": true,
    "fetchConvertQuote": true,
    "fetchConvertTrade": true,
    "fetchConvertTradeHistory": true,
    "fetchCrossBorrowRate": true,
    "fetchCrossBorrowRates": false,
    "fetchCurrencies": true,
    "fetchDeposit": false,
    "fetchDepositAddress": true,
    "fetchDepositAddresses": false,
    "fetchDepositAddressesByNetwork": false,
    "fetchDepositWithdrawFee": "emulated",
    "fetchDepositWithdrawFees": true,
    "fetchDeposits": true,
    "fetchDepositsWithdrawals": false,
    "fetchDepositsWs": false,
    "fetchFundingHistory": true,
    "fetchFundingRate": true,
    "fetchFundingRateHistory": true,
    "fetchFundingRates": true,
    "fetchGreeks": true,
    "fetchIndexOHLCV": true,
    "fetchIsolatedBorrowRate": "emulated",
    "fetchIsolatedBorrowRates": true,
    "fetchL2OrderBook": true,
    "fetchL3OrderBook": false,
    "fetchLastPrices": true,
    "fetchLedger": true,
    "fetchLedgerEntry": true,
    "fetchLeverage": "emulated",
    "fetchLeverageTiers": true,
    "fetchLeverages": true,
    "fetchLiquidations": false,
    "fetchMarginAdjustmentHistory": true,
    "fetchMarginMode": "emulated",
    "fetchMarginModes": true,
    "fetchMarkOHLCV": true,
    "fetchMarketLeverageTiers": "emulated",
    "fetchMarkets": true,
    "fetchMarketsWs": false,
    "fetchMyLiquidations": true,
    "fetchMySettlementHistory": true,
    "fetchMyTrades": true,
    "fetchMyTradesWs": true,
    "fetchOHLCV": true,
    "fetchOHLCVWs": true,
    "fetchOpenInterest": true,
    "fetchOpenInterestHistory": true,
    "fetchOpenOrder": true,
    "fetchOpenOrders": true,
    "fetchOpenOrdersWs": true,
    "fetchOption": true,
    "fetchOptionChain": false,
    "fetchOrder": true,
    "fetchOrderBook": true,
    "fetchOrderBookWs": true,
    "fetchOrderBooks": false,
    "fetchOrderTrades": true,
    "fetchOrderWs": true,
    "fetchOrders": true,
    "fetchOrdersWs": true,
    "fetchPermissions": null,
    "fetchPosition": true,
    "fetchPositionForSymbolWs": true,
    "fetchPositionHistory": false,
    "fetchPositionMode": true,
    "fetchPositionWs": true,
    "fetchPositions": true,
    "fetchPositionsHistory": false,
    "fetchPositionsRisk": true,
    "fetchPositionsWs": true,
    "fetchPremiumIndexOHLCV": false,
    "fetchSettlementHistory": true,
    "fetchStatus": true,
    "fetchTicker": true,
    "fetchTickerWs": true,
    "fetchTickers": true,
    "fetchTime": true,
    "fetchTrades": true,
    "fetchTradesWs": true,
    "fetchTradingFee": true,
    "fetchTradingFees": true,
    "fetchTradingFeesWs": false,
    "fetchTradingLimits": "emulated",
    "fetchTransactionFee": "emulated",
    "fetchTransactionFees": true,
    "fetchTransactions": false,
    "fetchTransfer": false,
    "fetchTransfers": true,
    "fetchUnderlyingAssets": false,
    "fetchVolatilityHistory": false,
    "fetchWithdrawAddresses": false,
    "fetchWithdrawal": false,
    "fetchWithdrawalWhitelist": false,
    "fetchWithdrawals": true,
    "fetchWithdrawalsWs": false,
    "future": true,
    "margin": true,
    "option": true,
    "privateAPI": true,
    "publicAPI": true,
    "reduceMargin": true,
    "repayCrossMargin": true,
    "repayIsolatedMargin": true,
    "sandbox": true,
    "setLeverage": true,
    "setMargin": false,
    "setMarginMode": true,
    "setPositionMode": true,
    "signIn": false,
    "spot": true,
    "swap": true,
    "transfer": true,
    "watchBalance": true,
    "watchBidsAsks": true,
    "watchMyTrades": true,
    "watchOHLCV": true,
    "watchOHLCVForSymbols": false,
    "watchOrderBook": true,
    "watchOrderBookForSymbols": true,
    "watchOrders": true,
    "watchOrdersForSymbols": true,
    "watchPositions": true,
    "watchTicker": true,
    "watchTickers": true,
    "watchTrades": true,
    "watchTradesForSymbols": true,
    "withdraw": true,
    "ws": true
}
2024-05-25 19:09:15,840 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-58' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-26 04:12:03,519 - asyncio - ERROR - Unclosed connection
client_connection: Connection<ConnectionKey(host='fstream.binance.com', port=443, is_ssl=True, ssl=True, proxy=None, proxy_auth=None, proxy_headers_hash=None)>
2024-05-26 04:12:03,521 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-77' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-26 06:47:34,993 - asyncio - ERROR - Unclosed connection
client_connection: Connection<ConnectionKey(host='fstream.binance.com', port=443, is_ssl=True, ssl=True, proxy=None, proxy_auth=None, proxy_headers_hash=None)>
2024-05-26 06:47:34,993 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-191' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-26 06:47:34,996 - asyncio - ERROR - Unclosed connection
client_connection: Connection<ConnectionKey(host='fstream.binance.com', port=443, is_ssl=True, ssl=True, proxy=None, proxy_auth=None, proxy_headers_hash=None)>
2024-05-26 06:47:34,996 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-202' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-26 08:31:38,906 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-164' coro=<AiohttpClient.ping_loop() done, defined at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py:104> exception=ConnectionResetError('Cannot write to closing transport')>
Traceback (most recent call last):
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\aiohttp_client.py", line 123, in ping_loop
    await self.connection.ping()
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\client_ws.py", line 157, in ping
    await self._writer.ping(message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 715, in ping
    await self._send_frame(message, WSMsgType.PING)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 675, in _send_frame
    self._write(header + mask + message)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\aiohttp\http_websocket.py", line 702, in _write
    raise ConnectionResetError("Cannot write to closing transport")
ConnectionResetError: Cannot write to closing transport
2024-05-26 16:11:15,386 - root - WARNING - el estado de la orden 11807531092 es open
2024-05-26 16:11:15,387 - root - WARNING - se cancelara la orden de cierre id '11807531098' con estado 'open'
2024-05-26 16:11:16,467 - root - WARNING - el estado de la orden 11798635655 es closed
2024-05-26 16:11:16,468 - root - WARNING - se cancelara la orden de cierre id '11798635683' con estado 'expired'
2024-05-26 16:28:54,563 - root - WARNING - el estado de la orden 11798635655 es closed
2024-05-26 16:28:54,564 - root - WARNING - se cancelara la orden de cierre id '11798635683' con estado 'expired'
2024-05-26 16:34:29,431 - root - WARNING - el estado de la orden 11802327416 es closed
2024-05-26 16:34:29,432 - root - WARNING - se cancelara la orden de cierre id '11802327425' con estado 'canceled'
2024-05-26 16:34:38,107 - ccxt.base.exchange - WARNING - binanceusdm requires to release all resources with an explicit call to the .close() coroutine. If you are using the exchange instance with async coroutines, add `await exchange.close()` to your code into a place when you're done with the exchange and don't need the exchange instance anymore (at the end of your async coroutine).
2024-05-26 16:43:09,482 - root - WARNING - el estado de la closing orden 11798635683 es expired
2024-05-26 16:47:41,275 - root - WARNING - el estado de la closing orden 11798635683 es expired
2024-05-26 16:48:32,505 - ccxt.base.exchange - WARNING - binanceusdm requires to release all resources with an explicit call to the .close() coroutine. If you are using the exchange instance with async coroutines, add `await exchange.close()` to your code into a place when you're done with the exchange and don't need the exchange instance anymore (at the end of your async coroutine).
2024-05-26 16:49:15,817 - root - WARNING - el estado de la closing orden 11798635683 es expired
2024-05-26 16:49:28,006 - root - WARNING - el estado de la closing orden 11802327425 es canceled
2024-05-26 16:49:56,090 - root - WARNING - el estado de la closing orden 11802503952 es closed
2024-05-26 16:50:10,248 - root - WARNING - el estado de la closing orden 11801923525 es canceled
2024-05-26 16:50:15,841 - root - WARNING - el estado de la closing orden 11800967286 es canceled
2024-05-26 16:50:22,265 - root - WARNING - el estado de la closing orden 11801313367 es closed
2024-05-26 16:50:25,901 - root - WARNING - el estado de la closing orden 11801633612 es closed
2024-05-26 16:50:32,063 - root - WARNING - el estado de la closing orden 11801818442 es canceled
2024-05-26 16:50:36,062 - root - WARNING - el estado de la closing orden 11806933575 es expired
2024-05-26 16:50:51,195 - root - WARNING - el estado de la closing orden 11804445958 es closed
2024-05-26 16:51:08,510 - root - WARNING - el estado de la closing orden 11802530234 es closed
2024-05-26 16:53:48,722 - root - WARNING - el estado de la closing orden 11800967459 es closed
2024-05-26 16:54:06,984 - root - WARNING - el estado de la closing orden 11801633756 es closed
2024-05-26 16:54:14,925 - root - WARNING - el estado de la closing orden 11801633794 es closed
2024-05-26 16:54:19,410 - root - WARNING - el estado de la closing orden 11802317541 es closed
2024-05-26 16:54:21,460 - root - WARNING - el estado de la closing orden 11802327626 es closed
2024-05-26 16:54:40,077 - root - WARNING - el estado de la closing orden 11801923525 es canceled
2024-05-26 18:00:16,140 - root - WARNING - el estado de la closing orden 11808432993 es closed
2024-05-26 18:16:56,317 - root - ERROR - binanceusdm {"code":-2021,"msg":"Order would immediately trigger."}
2024-05-26 18:32:27,486 - root - ERROR - binanceusdm {"code":-2019,"msg":"Margin is insufficient."}
2024-05-26 19:03:07,635 - root - ERROR - binanceusdm {"code":-2021,"msg":"Order would immediately trigger."}
2024-05-26 21:08:09,812 - root - ERROR - binanceusdm {"code":-1021,"msg":"Timestamp for this request was 1000ms ahead of the server's time."}
2024-05-26 22:49:23,357 - root - ERROR - binanceusdm {"code":-1021,"msg":"Timestamp for this request was 1000ms ahead of the server's time."}
2024-05-27 02:29:56,479 - root - WARNING - el estado de la closing orden 11808674726 es closed
2024-05-27 02:29:57,179 - root - WARNING - el estado de la closing orden 11808699622 es closed
2024-05-27 02:30:12,487 - root - WARNING - el estado de la closing orden 11808699622 es closed
2024-05-27 02:40:13,628 - root - WARNING - el estado de la closing orden 11808699622 es closed
2024-05-27 02:40:35,060 - root - WARNING - el estado de la closing orden 11808699622 es closed
2024-05-27 03:23:02,481 - root - WARNING - el estado de la closing orden 11809561624 es closed
2024-05-27 03:23:08,248 - root - WARNING - el estado de la closing orden 11808560241 es closed
2024-05-27 03:23:08,951 - root - WARNING - el estado de la closing orden 11808699622 es closed
2024-05-27 03:23:09,653 - root - WARNING - el estado de la closing orden 11809532462 es closed
2024-05-27 03:23:26,999 - root - WARNING - el estado de la closing orden 11808699622 es closed
2024-05-27 03:23:44,766 - root - ERROR - binanceusdm {"code":-2021,"msg":"Order would immediately trigger."}
2024-05-27 03:27:58,198 - root - WARNING - el estado de la closing orden 11808699622 es closed
2024-05-27 03:28:00,293 - root - WARNING - el estado de la closing orden 11809676444 es closed
2024-05-27 03:36:52,208 - root - WARNING - el estado de la closing orden 11809701092 es closed
2024-05-27 03:51:25,487 - root - WARNING - el estado de la closing orden 11809777207 es closed
2024-05-27 03:53:58,406 - root - WARNING - el estado de la closing orden 11809790903 es closed
2024-05-27 06:26:30,920 - root - WARNING - el estado de la closing orden 11810129590 es closed
2024-05-27 06:36:35,256 - root - WARNING - el estado de la closing orden 11809788174 es closed
2024-05-27 06:39:29,614 - root - ERROR - binanceusdm {"code":-2019,"msg":"Margin is insufficient."}
2024-05-27 06:42:59,616 - root - ERROR - binanceusdm {"code":-2019,"msg":"Margin is insufficient."}
2024-05-27 08:33:05,141 - root - ERROR - binanceusdm {"code":-1021,"msg":"Timestamp for this request was 1000ms ahead of the server's time."}
2024-05-27 09:57:14,611 - root - ERROR - binanceusdm {"code":-2021,"msg":"Order would immediately trigger."}
2024-05-27 11:00:17,730 - root - ERROR - binanceusdm {"code":-4045,"msg":"Reach max stop order limit."}
2024-05-27 11:46:23,800 - root - WARNING - el estado de la closing orden 11810832095 es closed
2024-05-27 17:10:20,638 - root - ERROR - binanceusdm {"code":-2019,"msg":"Margin is insufficient."}
2024-05-27 19:00:35,970 - root - WARNING - el estado de la closing orden 11812064672 es closed
2024-05-27 20:11:53,208 - root - ERROR - binanceusdm {"code":-1021,"msg":"Timestamp for this request was 1000ms ahead of the server's time."}
2024-05-27 20:12:27,053 - root - ERROR - binanceusdm {"code":-1021,"msg":"Timestamp for this request was 1000ms ahead of the server's time."}
2024-05-27 21:09:02,897 - root - ERROR - binanceusdm {"code":-1021,"msg":"Timestamp for this request was 1000ms ahead of the server's time."}
2024-05-27 21:36:43,432 - root - ERROR - binanceusdm {"code":-1021,"msg":"Timestamp for this request was 1000ms ahead of the server's time."}
2024-05-27 22:45:48,533 - root - ERROR - binanceusdm {"code":-1021,"msg":"Timestamp for this request was 1000ms ahead of the server's time."}
2024-05-27 22:46:24,262 - root - ERROR - binanceusdm {"code":-1021,"msg":"Timestamp for this request was 1000ms ahead of the server's time."}
2024-05-27 23:00:12,309 - root - ERROR - binanceusdm {"code":-1021,"msg":"Timestamp for this request was 1000ms ahead of the server's time."}
2024-05-27 23:02:41,491 - root - ERROR - binanceusdm {"code":-1021,"msg":"Timestamp for this request was 1000ms ahead of the server's time."}
2024-05-28 00:37:07,018 - root - ERROR - binanceusdm {"code":-1021,"msg":"Timestamp for this request was 1000ms ahead of the server's time."}
2024-05-28 01:25:06,493 - root - ERROR - binanceusdm {"code":-1021,"msg":"Timestamp for this request was 1000ms ahead of the server's time."}
2024-05-28 01:34:54,673 - root - ERROR - binanceusdm {"code":-1021,"msg":"Timestamp for this request was 1000ms ahead of the server's time."}
2024-05-28 02:32:55,747 - root - WARNING - el estado de la closing orden 11811958026 es closed
2024-05-28 02:47:47,262 - root - ERROR - binanceusdm {"code":-2021,"msg":"Order would immediately trigger."}
2024-05-28 06:48:39,057 - root - ERROR - binanceusdm {"code":-2021,"msg":"Order would immediately trigger."}
2024-05-28 09:08:08,608 - root - ERROR - binanceusdm {"code":-4045,"msg":"Reach max stop order limit."}
2024-05-28 09:48:22,816 - root - ERROR - binanceusdm {"code":-2019,"msg":"Margin is insufficient."}
2024-05-28 10:08:55,711 - root - ERROR - binanceusdm {"code":-2019,"msg":"Margin is insufficient."}
2024-05-28 10:10:14,720 - root - ERROR - binanceusdm {"code":-2019,"msg":"Margin is insufficient."}
2024-05-28 11:33:48,084 - root - ERROR - binanceusdm {"code":-2019,"msg":"Margin is insufficient."}
2024-05-28 11:34:42,804 - root - ERROR - binanceusdm {"code":-2019,"msg":"Margin is insufficient."}
2024-05-28 11:42:34,692 - root - ERROR - binanceusdm {"code":-2019,"msg":"Margin is insufficient."}
2024-05-31 22:16:42,028 - root - ERROR - binanceusdm {"code":-2021,"msg":"Order would immediately trigger."}
2024-06-03 14:35:08,761 - ccxt.base.exchange - WARNING - binanceusdm requires to release all resources with an explicit call to the .close() coroutine. If you are using the exchange instance with async coroutines, add `await exchange.close()` to your code into a place when you're done with the exchange and don't need the exchange instance anymore (at the end of your async coroutine).
2024-06-03 15:12:15,615 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:39> exception=ExchangeClosedByUser('Connection closed by the user')>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 45, in start
    pprint(await self.exchange.watch_balance())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\pro\binance.py", line 1700, in watch_balance
    return await self.watch(url, messageHash, message, type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ccxt.base.errors.ExchangeClosedByUser: Connection closed by the user
2024-06-03 15:38:52,057 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:39> exception=ExchangeClosedByUser('Connection closed by the user')>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 45, in start
    pprint(await self.exchange.watch_balance())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\pro\binance.py", line 1700, in watch_balance
    return await self.watch(url, messageHash, message, type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ccxt.base.errors.ExchangeClosedByUser: Connection closed by the user
2024-06-03 15:40:11,760 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:39> exception=ExchangeClosedByUser('Connection closed by the user')>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 45, in start
    pprint(await self.exchange.watch_balance())
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\pro\binance.py", line 1700, in watch_balance
    return await self.watch(url, messageHash, message, type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ccxt.base.errors.ExchangeClosedByUser: Connection closed by the user
2024-06-03 15:46:02,790 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:39> exception=BadSymbol('binanceusdm does not have market symbol T')>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 45, in start
    pprint(await self.exchange.watch_order_book(self.symbol,5))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\pro\binance.py", line 1040, in watch_bids_asks
    result = await self.watch_multi_ticker_helper('watchBidsAsks', 'bookTicker', symbols, params)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\pro\binance.py", line 1047, in watch_multi_ticker_helper
    symbols = self.market_symbols(symbols, None, True, False, True)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\base\exchange.py", line 3257, in market_symbols
    market = self.market(symbols[i])
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\binance.py", line 2562, in market
    raise BadSymbol(self.id + ' does not have market symbol ' + symbol)
ccxt.base.errors.BadSymbol: binanceusdm does not have market symbol T
2024-06-03 15:47:29,811 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:39> exception=ExchangeClosedByUser('Connection closed by the user')>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 45, in start
    pprint(await self.exchange.watch_order_book(self.symbol,5))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\pro\binance.py", line 230, in watch_order_book
    return await self.watch_order_book_for_symbols([symbol], limit, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\pro\binance.py", line 281, in watch_order_book_for_symbols
    orderbook = await self.watch_multiple(url, messageHashes, message, messageHashes, subscription)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ccxt.base.errors.ExchangeClosedByUser: Connection closed by the user
2024-06-03 15:53:04,986 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:40> exception=TypeError("'coroutine' object is not subscriptable")>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 46, in start
    pprint(await self.exchange.watch_order_book(self.symbol,5)["asks"][0])
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^
TypeError: 'coroutine' object is not subscriptable
2024-06-03 15:53:40,938 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:40> exception=TypeError("'coroutine' object is not subscriptable")>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 46, in start
    pprint((await self.exchange.watch_order_book(self.symbol,5))["asks"][0])
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: 'coroutine' object is not subscriptable
2024-06-03 16:37:27,367 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:40> exception=NotSupported('binanceusdm watchOHLCVForSymbols() is not supported yet')>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 46, in start
    pprint((await self.exchange.watch_ohlcv_for_symbols(self.symbol,None,5))["asks"][0])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\exchange.py", line 584, in watch_ohlcv_for_symbols
    raise NotSupported(self.id + ' watchOHLCVForSymbols() is not supported yet')
ccxt.base.errors.NotSupported: binanceusdm watchOHLCVForSymbols() is not supported yet
2024-06-03 16:40:31,675 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:40> exception=NotSupported('binanceusdm watchOHLCVForSymbols() is not supported yet')>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 47, in start
    pprint((await self.exchange.watch_ohlcv(self.symbol,"1m",None,5))["asks"][0])
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\exchange.py", line 584, in watch_ohlcv_for_symbols
    raise NotSupported(self.id + ' watchOHLCVForSymbols() is not supported yet')
ccxt.base.errors.NotSupported: binanceusdm watchOHLCVForSymbols() is not supported yet
2024-06-03 17:05:50,116 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:40> exception=TypeError('list indices must be integers or slices, not str')>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 47, in start
    pprint((await self.exchange.watch_ohlcv(self.symbol,"1m"))["asks"][0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: list indices must be integers or slices, not str
2024-06-03 17:06:53,827 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:40> exception=TypeError('list indices must be integers or slices, not str')>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 47, in start
    #pprint((await self.exchange.watch_order_book(self.symbol,5))["asks"][0])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: list indices must be integers or slices, not str
2024-06-03 17:08:09,454 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:40> exception=NotSupported('binanceusdm watchOHLCVForSymbols() is not supported yet')>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 46, in start
    self.exchange.verbose = True
           ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\exchange.py", line 584, in watch_ohlcv_for_symbols
    raise NotSupported(self.id + ' watchOHLCVForSymbols() is not supported yet')
ccxt.base.errors.NotSupported: binanceusdm watchOHLCVForSymbols() is not supported yet
2024-06-04 13:13:16,719 - asyncio - ERROR - Exception in callback Future.race.<locals>.callback(<Task cancell...tasks.py:435>>) at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\future.py:25
handle: <Handle Future.race.<locals>.callback(<Task cancell...tasks.py:435>>) at C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\future.py:25>
Traceback (most recent call last):
  File "C:\Python312\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
           ^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\asyncio\base_events.py", line 685, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "c:\Users\arman\myProjects\ag-bin-py\main.py", line 27, in main
    await order_manager.startMenu()
  File "c:\Users\arman\myProjects\ag-bin-py\bot_manager.py", line 142, in startMenu
    raise e
  File "c:\Users\arman\myProjects\ag-bin-py\bot_manager.py", line 127, in startMenu
    asyncio.create_task(self.create_bot_operation())
  File "C:\Python312\Lib\asyncio\tasks.py", line 420, in create_task
    task = loop.create_task(coro)
           ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\asyncio\base_events.py", line 457, in create_task
    task = tasks.Task(coro, loop=self, name=name, context=context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: a coroutine was expected, got None

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\asyncio\events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\async_support\base\ws\future.py", line 26, in callback
    exception = done.exception()
                ^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\asyncio\tasks.py", line 464, in wait
    return await _wait(fs, timeout, return_when, loop)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\asyncio\tasks.py", line 550, in _wait
    await waiter
asyncio.exceptions.CancelledError
2024-06-04 13:13:16,806 - asyncio - ERROR - Future exception was never retrieved
future: <Future finished exception=NetworkError(RuntimeError('Session is closed'))>
ccxt.base.errors.NetworkError: Session is closed
2024-06-04 13:16:05,155 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:68> exception=AttributeError("'BotOperation' object has no attribute 'estrategia'")>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 79, in start
    self.actualizar_datos({"precio_actual":lastPrice})
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 42, in actualizar_datos
    accion, precio_entrada = self.estrategia.evaluar_orden(datos_mercado, self.precio_entrada, self.porcentaje)
                             ^^^^^^^^^^^^^^^
AttributeError: 'BotOperation' object has no attribute 'estrategia'. Did you mean: '_strategy'?
2024-06-04 13:18:29,767 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:68> exception=AttributeError("'BotOperation' object has no attribute 'precio_entrada'")>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 79, in start
    self.actualizar_datos({"precio_actual":lastPrice})
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 42, in actualizar_datos
    accion, precio_entrada = self._strategy.evaluar_orden(datos_mercado, self.precio_entrada, self.porcentaje)
                                                                         ^^^^^^^^^^^^^^^^^^^
AttributeError: 'BotOperation' object has no attribute 'precio_entrada'
2024-06-04 13:22:16,950 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:68> exception=AttributeError("'BotOperation' object has no attribute 'porcentaje'")>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 81, in start
    self.actualizar_datos({"precio_actual":lastPrice})
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 42, in actualizar_datos
    accion, precio_entrada = self._strategy.evaluar_orden(datos_mercado, self.entryPrice, self.porcentaje)
                                                                                          ^^^^^^^^^^^^^^^
AttributeError: 'BotOperation' object has no attribute 'porcentaje'
2024-06-04 13:25:02,830 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:68> exception=AttributeError("'BotOperation' object has no attribute 'numero_ordenes_contra'")>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 81, in start
    self.actualizar_datos({"precio_actual":lastPrice})
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 49, in actualizar_datos
    self.numero_ordenes_contra += 1
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'BotOperation' object has no attribute 'numero_ordenes_contra'
2024-06-04 14:26:55,592 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-10' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:82> exception=ExchangeClosedByUser('Connection closed by the user')>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 87, in start
    entryReferencePrice = (await self.exchange.watch_ticker(self.symbol))['last']
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\pro\binance.py", line 1011, in watch_ticker
    tickers = await self.watch_tickers([symbol], self.extend(params, {'callerMethodName': 'watchTicker'}))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\pro\binance.py", line 1025, in watch_tickers
    newTickers = await self.watch_multi_ticker_helper('watchTickers', channelName, symbols, params)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\pro\binance.py", line 1095, in watch_multi_ticker_helper
    result = await self.watch_multiple(url, messageHashes, self.deep_extend(request, params), subscriptionArgs, subscribe)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ccxt.base.errors.ExchangeClosedByUser: Connection closed by the user
2024-06-05 09:31:22,386 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py:84> exception=RequestTimeout('Connection to wss://fstream.binance.com/ws/0 timed out due to a ping-pong keepalive missing on time')>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\bot_operation_service.py", line 95, in start
    lastPrice = (await self.exchange.watch_ticker(self.symbol))['last']
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\pro\binance.py", line 1011, in watch_ticker
    tickers = await self.watch_tickers([symbol], self.extend(params, {'callerMethodName': 'watchTicker'}))
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\pro\binance.py", line 1025, in watch_tickers
    newTickers = await self.watch_multi_ticker_helper('watchTickers', channelName, symbols, params)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\arman\myProjects\ag-bin-py\.venv\Lib\site-packages\ccxt\pro\binance.py", line 1095, in watch_multi_ticker_helper
    result = await self.watch_multiple(url, messageHashes, self.deep_extend(request, params), subscriptionArgs, subscribe)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ccxt.base.errors.RequestTimeout: Connection to wss://fstream.binance.com/ws/0 timed out due to a ping-pong keepalive missing on time
2024-06-08 12:05:56,217 - ccxt.base.exchange - WARNING - binanceusdm requires to release all resources with an explicit call to the .close() coroutine. If you are using the exchange instance with async coroutines, add `await exchange.close()` to your code into a place when you're done with the exchange and don't need the exchange instance anymore (at the end of your async coroutine).
2024-06-09 10:40:53,547 - ccxt.base.exchange - WARNING - binanceusdm requires to release all resources with an explicit call to the .close() coroutine. If you are using the exchange instance with async coroutines, add `await exchange.close()` to your code into a place when you're done with the exchange and don't need the exchange instance anymore (at the end of your async coroutine).
2024-06-09 10:55:04,105 - asyncio - ERROR - Task exception was never retrieved
future: <Task finished name='Task-12' coro=<BotOperation.start() done, defined at c:\Users\arman\myProjects\ag-bin-py\clean\bot_operation_service.py:80> exception=AttributeError("'BotOperation' object has no attribute 'exchange'")>
Traceback (most recent call last):
  File "c:\Users\arman\myProjects\ag-bin-py\clean\bot_operation_service.py", line 85, in start
    entryReferencePrice = (await self.exchange.watch_ticker(self.symbol))['last']
                                 ^^^^^^^^^^^^^
AttributeError: 'BotOperation' object has no attribute 'exchange'
2024-06-09 15:01:33,516 - ccxt.base.exchange - WARNING - binanceusdm requires to release all resources with an explicit call to the .close() coroutine. If you are using the exchange instance with async coroutines, add `await exchange.close()` to your code into a place when you're done with the exchange and don't need the exchange instance anymore (at the end of your async coroutine).
